// const subjectchosen = document.getElementById("subjectnameid");
//const levelchosen = document.getElementById("levelnameid");
//const newsubjectrequest = document.getElementById("newsubjectnameid");
//const newtopicrequest = document.getElementById("newtopicnameid");
//const pricerequest = document.getElementById("priceid");
//const confirmaction = document.getElementById("confirmid");

const commonName = document.getElementById("commonnameID");
const botanicalName = document.getElementById("botnameID");
const newplantrequest = document.getElementById("newplantnameID");
const newcategoryrequest = document.getElementById("newcategorynameID");
const descriptionrequest = document.getElementById("descriptionID");
const confirmation = document.getElementById("confirmID");

const minimumspread = document.getElementById("minSpreadID")
const minimumheight = document.getElementById("minHeightID")
const maxspread = document.getElementById("maxSpreadID")
const maxheight = document.getElementById("maxHeightID")
const season = document.getElementById("seasonID")
const hardiness = document.getElementById("hardinessID")
const soiltype = document.getElementById("soilTypeID")
const sunlevel = document.getElementById("sunLevelID")

// Add a submit event listener to the form
const form = document.getElementById('insertForm');
form.addEventListener('submit', handleFormSubmit);

// Add a change event listener to confirmaction
confirmaction.addEventListener("change", handleConfirm);

function handleFormSubmit(event) {
  event.preventDefault();

  if (validCondition()){
 
    correct = handleConfirm();
    console.log (correct);
    if (correct){
      let dataTosend = gatherData();
      console.log(dataTosend);
      insertDetails(dataTosend);

      // Reset the form
      form.reset();
  
      // Add is-invalid back to form elements
      addValidityConstraints();
      
    }
 
  }
  else{
    alert("Form incomplete!");
  }

}

function addValidityConstraints(){
  subjectchosen.classList.add("is-invalid");
  levelchosen.classList.add("is-invalid");
  pricerequest.classList.add("is-invalid");
  newsubjectrequest.classList.add("is-invalid");
  newtopicrequest.classList.add("is-invalid");
  confirmaction.classList.add("is-invalid")
}

function validCondition(){

  let state;

  if ( (level.value == -1) || (subject.value == -1) || ((subject.value == 999) && (newsubjectname.value == "")) || (newtopicname.value == "" ) || (price.value == "") ){
    state = false;
  }
  else {
    state = true;
  }

  return state;
 
}
 

function getplant(plantchosen,newsplantrequest){

  const selectedOption= plantchosen.options[plantchosen.selectedIndex];
  let plantID = selectedOption.value;
  let commonName = selectedOption.text;
  let userplant = [];
  
  
  if (plantID == 999 ){
    newPlantField = newplantrequest.value
    if (newPlantField != ""){
      console.log("New plant:", newPlantField);
      userplant = [-1, newPlantField];
    }
  }
  else{
    userplant = [plantID, commonName];
    
  }
  
  return userplant;
  
}

function getCategory(categorychosen){
  const selectedOption = categorychosen.options[categorychosen.selectedIndex];
  const categoryID = selectedOption.value;
  const catName = selectedOption.text;

  let category = [];

  userLevel = [categoryID,catName];
  
  return category;
}
  
function getnewCategory(newcategoryrequest){

  let newcategory = [];

  const newCategoryField = newcategoryrequest.value
  
  if (newCategoryField != ""){
    console.log("New category:", newCategoryField);
    newcategory = [-1, newCategoryField];

  }
  return newcategory;
}

function getDescription(descriptionrequest){

  let description;
  const amount = descriptionrequest.value

  if (amount != ""){
    console.log("Description is:", amount);
    description = amount;
  }

  return description;
}

function handleConfirm(){

  let check = false;

  if (confirmaction.checked) {
    console.log("Checkbox has been checked.");
    check = true
  } else {
    console.log("Checkbox has been unchecked.");
  }

  return check;
   
}

//function getTodayDate(){

  const today = new Date();
  const year = today.getFullYear();
  const month = String(today.getMonth() + 1).padStart(2, '0');
  const day = String(today.getDate()).padStart(2, '0');

  const formattedDate = `${year}-${month}-${day}`;
  console.log(formattedDate);

  return formattedDate;
//}
  
function gatherData(){

  
  const plantData = getuserSubject(commonName,newplantrequest);
  console.log ("gatherData common name: ", plantData[0],plantData[1]);

  const botNameData = getuserLevel(botanicalName);
  console.log ("gatherData botanical name: ", botNameData[0], botNameData[1]);

  const categoryData = getuserTopic(newcategoryrequest);
  console.log ("gatherData category: ", categoryData[0],categoryData[1]);

  const descriptionData = getuserPrice(descriptionrequest) ;
  console.log ("gatherData price: ", descriptionData);

  //const dateData = getTodayDate();
  //console.log ("gatherData date: ", dateData);
 
  let dataTosend = {
    commonName: plantData[0],
    botanicalName: subjectData[1],
    levelid: levelData[0],
    levelname: levelData[1],
    topicid: topicData[0],
    topicname: topicData[1],
    price:priceData,
    //datefrom:dateData

  } 
  return dataTosend;
}
   

async function insertDetails(dataTosend){
  //console.log(dataTosend);

  const serverfilename = "../php/insertPlant.php"
  try{
    const response = await fetch(serverfilename,{
      method: "POST",
      body: JSON.stringify(dataTosend)
     
    })

    const responses = await response.json();

    //console.log(responses);
    
    handleResponseCode(responses);
 
  }catch (error){
    console.log('Error:',error);
  }

}

// handle response from server 
function handleResponseCode(responses){

  let combinedMessage = "";
  responses.forEach(response => {
    const code = response.code;
    const message = response.message;
    console.log(`Code: ${code}, Message: ${message}`);
    if (code == 1){
      combinedMessage = combinedMessage + message + "\n ";
    }
   
  });

  alert(combinedMessage);
}
